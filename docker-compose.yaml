version: "3.2"

services:
  logs-postgres:
    build:
      context: ./postgres
    ports:
      - "5440:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_NAME: postgres
      POSTGRES_HOST: logs-postgres
      POSTGRES_PORT: 5432
    networks:
      - net-logs

  logs-zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181
    networks:
      - net-logs
    container_name: logs-zookeeper

  logs-kafka:
    image: wurstmeister/kafka:2.11-1.1.1
    container_name: logs-kafka
    networks:
      - net-logs
    expose:
      - "9093"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: logs-zookeeper:2181
      KAFKA_CREATE_TOPICS: "task-queue:1:1:delete, status-queue:1:1:delete"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://logs-kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://:9092
    depends_on:
      - logs-zookeeper
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  logs-application:
    build:
      context: ./elkLogSystem
    volumes: 
    - ./logs:/opt/logs
    depends_on:
      - logs-zookeeper
      - logs-kafka
      - logs-postgres
    environment:
      LOGS_KAFKA_SERVER: logs-kafka:9092
      THIRD_PARTY_URL: http://logs-third-party:8081/
    ports:
      - 7080:8080
    networks:
      - net-logs
      
  logs-worker:
    build:
      context: ./worker
    volumes: 
    - ./logs:/opt/logs
    environment:
      LOGS_KAFKA_SERVER: logs-kafka:9092
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - logs-zookeeper
      - logs-kafka
    networks:
      - net-logs
      
  logs-third-party:
    build:
      context: ./thirdPartyApi
    volumes: 
    - ./logs:/opt/logs
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - logs-application
    networks:
      - net-logs
      
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.4.2
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=logs_cluster
      - bootstrap.memory_lock=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - "discovery.type=single-node"
      - ingest.geoip.downloader.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 9201:9200
    networks:
      - net-logs
      
  kibana:
    image: docker.elastic.co/kibana/kibana:8.4.2
    container_name: kibana
    environment:
      ELASTICSEARCH_URL: "http://elasticsearch:9200"
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    networks:
      - net-logs
      
  logstash:
    image: docker.elastic.co/logstash/logstash:8.4.2
    container_name: logstash
    volumes:
      - ./elk/logstash/:/usr/share/logstash/pipeline
      - ./logs:/logs
    command: logstash -f /usr/share/logstash/pipeline/logstash.conf 
    depends_on:
      - elasticsearch
    ports:
      - '9600:9600'    
    networks:
      - net-logs

volumes:
  esdata1:
    driver: local

networks:
  net-logs:
    driver: bridge
